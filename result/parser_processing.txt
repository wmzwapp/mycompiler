移进  stack=['#', 'int']  status=[0, 3] next_char=ID
移进  stack=['#', 'int', 'ID']  status=[0, 3, 7] next_char=(
移进  stack=['#', 'int', 'ID', '(']  status=[0, 3, 7, 13] next_char=int
移进  stack=['#', 'int', 'ID', '(', 'int']  status=[0, 3, 7, 13, 18] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'int', 'ID']  status=[0, 3, 7, 13, 18, 23] next_char=,
使用产生式15:H->['int', 'ID']规约 stack=['#', 'int', 'ID', '(', 'H']   status=[0, 3, 7, 13, 17]
移进  stack=['#', 'int', 'ID', '(', 'H', ',']  status=[0, 3, 7, 13, 17, 22] next_char=int
移进  stack=['#', 'int', 'ID', '(', 'H', ',', 'int']  status=[0, 3, 7, 13, 17, 22, 18] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'H', ',', 'int', 'ID']  status=[0, 3, 7, 13, 17, 22, 18, 23] next_char=,
使用产生式15:H->['int', 'ID']规约 stack=['#', 'int', 'ID', '(', 'H', ',', 'H']   status=[0, 3, 7, 13, 17, 22, 17]
移进  stack=['#', 'int', 'ID', '(', 'H', ',', 'H', ',']  status=[0, 3, 7, 13, 17, 22, 17, 22] next_char=int
移进  stack=['#', 'int', 'ID', '(', 'H', ',', 'H', ',', 'int']  status=[0, 3, 7, 13, 17, 22, 17, 22, 18] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'H', ',', 'H', ',', 'int', 'ID']  status=[0, 3, 7, 13, 17, 22, 17, 22, 18, 23] next_char=)
使用产生式15:H->['int', 'ID']规约 stack=['#', 'int', 'ID', '(', 'H', ',', 'H', ',', 'H']   status=[0, 3, 7, 13, 17, 22, 17, 22, 17]
使用产生式14:G'->['_']规约 stack=['#', 'int', 'ID', '(', 'H', ',', 'H', ',', 'H', "G'"]   status=[0, 3, 7, 13, 17, 22, 17, 22, 17, 21]
使用产生式12:G->['H', "G'"]规约 stack=['#', 'int', 'ID', '(', 'H', ',', 'H', ',', 'G']   status=[0, 3, 7, 13, 17, 22, 17, 22, 26]
使用产生式13:G'->[',', 'G']规约 stack=['#', 'int', 'ID', '(', 'H', ',', 'H', "G'"]   status=[0, 3, 7, 13, 17, 22, 17, 21]
使用产生式12:G->['H', "G'"]规约 stack=['#', 'int', 'ID', '(', 'H', ',', 'G']   status=[0, 3, 7, 13, 17, 22, 26]
使用产生式13:G'->[',', 'G']规约 stack=['#', 'int', 'ID', '(', 'H', "G'"]   status=[0, 3, 7, 13, 17, 21]
使用产生式12:G->['H', "G'"]规约 stack=['#', 'int', 'ID', '(', 'G']   status=[0, 3, 7, 13, 16]
使用产生式10:E->['G']规约 stack=['#', 'int', 'ID', '(', 'E']   status=[0, 3, 7, 13, 15]
移进  stack=['#', 'int', 'ID', '(', 'E', ')']  status=[0, 3, 7, 13, 15, 20] next_char={
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{']  status=[0, 3, 7, 13, 15, 20, 25] next_char=int
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'int']  status=[0, 3, 7, 13, 15, 20, 25, 29] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'int', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 29, 41] next_char=;
使用产生式19:K->['int', 'ID']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K']   status=[0, 3, 7, 13, 15, 20, 25, 28]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';']  status=[0, 3, 7, 13, 15, 20, 25, 28, 40] next_char=int
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';', 'int']  status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 29] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';', 'int', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 29, 41] next_char=;
使用产生式19:K->['int', 'ID']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';', 'K']   status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 28]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';', 'K', ';']  status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 28, 40] next_char=ID
使用产生式18:I->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';', 'K', ';', 'I']   status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 28, 40, 56]
使用产生式17:I->['K', ';', 'I']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'K', ';', 'I']   status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 56]
使用产生式17:I->['K', ';', 'I']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I']   status=[0, 3, 7, 13, 15, 20, 25, 27]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 39] next_char==
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=']  status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55] next_char=NUM
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'NUM']  status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 53] next_char=;
使用产生式52:V->['NUM']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 51]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 50]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 50, 74]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 49]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 49, 66]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 84]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'ID', '=', 'Q', ';']  status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 84, 114] next_char=if
使用产生式27:P->['ID', '=', 'Q', ';']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'P']   status=[0, 3, 7, 13, 15, 20, 25, 27, 35]
使用产生式26:L->['P']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36] next_char=(
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 61] next_char=>
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 61, 94]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 59]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', '>']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 72] next_char=(
使用产生式40:T->['>']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 61] next_char=+
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 61, 94]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 61] next_char=)
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 61, 94]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 59]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', '+', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 89, 118]
使用产生式45:R'->['+', 'R']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 58]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 58, 86]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 97]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', '(', 'Q', ')']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 63, 97, 123] next_char=)
使用产生式53:V->['(', 'Q', ')']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 59]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 58]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 58, 86]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', 'T', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 87, 117]
使用产生式36:Q'->['T', 'Q']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 58, 86]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85] next_char={
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116] next_char=ID
使用产生式18:I->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39] next_char==
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 52] next_char=+
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 52, 80]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 51]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75] next_char=(
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 61] next_char=*
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 61, 94]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', '*']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 92] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', '*', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 92, 61] next_char=+
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', '*', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 92, 61, 94]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', '*', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 92, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', '*', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 92, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', '*', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 92, 120]
使用产生式49:U'->['*', 'U']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89] next_char=NUM
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+', 'NUM']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89, 62] next_char=)
使用产生式52:V->['NUM']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89, 59]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', '+', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 89, 118]
使用产生式45:R'->['+', 'R']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 58]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 58, 86]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 83]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', '(', 'Q', ')']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 54, 83, 113] next_char=;
使用产生式53:V->['(', 'Q', ')']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 51]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 50]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 50, 74]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', '+', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 75, 100]
使用产生式45:R'->['+', 'R']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 50, 74]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 49]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 49, 66]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 84]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'ID', '=', 'Q', ';']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 39, 55, 84, 114] next_char=}
使用产生式27:P->['ID', '=', 'Q', ';']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'P']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 35]
使用产生式26:L->['P']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 31]
使用产生式22:J'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 155]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', '{', 'I', 'J', '}']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 116, 143, 155, 158] next_char=else
使用产生式16:F->['{', 'I', 'J', '}']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142] next_char={
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125] next_char=ID
使用产生式18:I->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39] next_char==
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 52] next_char=;
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 52, 80]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 51]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 50]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 50, 74]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 49]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 49, 66]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 84]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'ID', '=', 'Q', ';']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 39, 55, 84, 114] next_char=}
使用产生式27:P->['ID', '=', 'Q', ';']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'P']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 35]
使用产生式26:L->['P']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 31]
使用产生式22:J'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 156]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', '{', 'I', 'J', '}']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 125, 145, 156, 159] next_char=while
使用产生式16:F->['{', 'I', 'J', '}']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', 'else', 'F']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 142, 154]
使用产生式33:M'->['else', 'F']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'if', '(', 'Q', ')', 'F', "M'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 36, 45, 57, 85, 115, 141]
使用产生式32:M->['if', '(', 'Q', ')', 'F', "M'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'M']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 32]
使用产生式23:L->['M']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37] next_char=(
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 61] next_char=<=
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 61, 94]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 59]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', '<=']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 71] next_char=NUM
使用产生式39:T->['<=']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'NUM']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 62] next_char=)
使用产生式52:V->['NUM']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 60]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 60, 91]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 59]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 59, 88]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 58]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 58, 86]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', 'T', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 87, 117]
使用产生式36:Q'->['T', 'Q']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 58, 86]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98] next_char={
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125] next_char=ID
使用产生式18:I->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39] next_char==
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 52] next_char=*
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 52, 80]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', '*']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51, 78] next_char=NUM
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', '*', 'NUM']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51, 78, 53] next_char=;
使用产生式52:V->['NUM']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', '*', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51, 78, 51]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', '*', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51, 78, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', '*', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51, 78, 102]
使用产生式49:U'->['*', 'U']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 50]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 50, 74]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 49]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 49, 66]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 84]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'ID', '=', 'Q', ';']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 39, 55, 84, 114] next_char=}
使用产生式27:P->['ID', '=', 'Q', ';']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'P']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 35]
使用产生式26:L->['P']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 31]
使用产生式22:J'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 156]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', '{', 'I', 'J', '}']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 125, 145, 156, 159] next_char=return
使用产生式16:F->['{', 'I', 'J', '}']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'while', '(', 'Q', ')', 'F']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 37, 46, 64, 98, 124]
使用产生式31:N->['while', '(', 'Q', ')', 'F']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'N']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 33]
使用产生式24:L->['N']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38] next_char=ID
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'ID']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 52] next_char=;
使用产生式56:W->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'ID', 'W']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 52, 80]
使用产生式54:V->['ID', 'W']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'V']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 51]
使用产生式51:U'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'V', "U'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 51, 77]
使用产生式48:U->['V', "U'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'U']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 50]
使用产生式47:R'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'U', "R'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 50, 74]
使用产生式44:R->['U', "R'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'R']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 49]
使用产生式37:Q'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'R', "Q'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 49, 66]
使用产生式35:Q->['R', "Q'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', 'Q']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 48]
使用产生式29:O'->['Q']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', "O'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 47]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'return', "O'", ';']  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 38, 47, 65] next_char=}
使用产生式28:O->['return', "O'", ';']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'O']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 34]
使用产生式25:L->['O']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'L']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 31]
使用产生式22:J'->['_']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 43]
使用产生式21:J'->['J']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 43]
使用产生式21:J'->['J']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 43]
使用产生式21:J'->['J']规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'L', "J'"]   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 44]
使用产生式20:J->['L', "J'"]规约 stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'J']   status=[0, 3, 7, 13, 15, 20, 25, 27, 30]
移进  stack=['#', 'int', 'ID', '(', 'E', ')', '{', 'I', 'J', '}']  status=[0, 3, 7, 13, 15, 20, 25, 27, 30, 42] next_char=#
使用产生式16:F->['{', 'I', 'J', '}']规约 stack=['#', 'int', 'ID', '(', 'E', ')', 'F']   status=[0, 3, 7, 13, 15, 20, 24]
使用产生式9:C->['(', 'E', ')', 'F']规约 stack=['#', 'int', 'ID', 'C']   status=[0, 3, 7, 10]
使用产生式7:B->['C']规约 stack=['#', 'int', 'ID', 'B']   status=[0, 3, 7, 9]
使用产生式4:A->['int', 'ID', 'B']规约 stack=['#', 'A']   status=[0, 1]
使用产生式3:S->['_']规约 stack=['#', 'A', 'S']   status=[0, 1, 5]
使用产生式1:S'->['A', 'S']规约 stack=['#', "S'"]   status=[0, 2]
分析成功！
