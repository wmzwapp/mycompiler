移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3] next_char=ID
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7] next_char=(
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13] next_char=void
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 19] next_char=)
使用产生式11:<形参>->['void']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20] next_char={
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25] next_char=int
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 29] next_char=ID
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 29, 41] next_char=;
使用产生式19:<内部变量声明>->['int', 'ID']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 28]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 28, 40] next_char=int
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 29] next_char=ID
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 29, 41] next_char=;
使用产生式19:<内部变量声明>->['int', 'ID']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 28]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 28, 40] next_char=ID
使用产生式18:<内部声明>->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 28, 40, 56]
使用产生式17:<内部声明>->['<内部变量声明>', ';', '<内部声明>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 28, 40, 56]
使用产生式17:<内部声明>->['<内部变量声明>', ';', '<内部声明>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 27, 39] next_char==
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55] next_char=NUM
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 53] next_char=;
使用产生式52:<因子>->['NUM']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 51]
使用产生式51:<项>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 51, 77]
使用产生式48:<项>->['<因子>', "<项>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 50]
使用产生式47:<加法表达式>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 50, 74]
使用产生式44:<加法表达式>->['<项>', "<加法表达式>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 49]
使用产生式37:<表达式>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 49, 66]
使用产生式35:<表达式>->['<加法表达式>', "<表达式>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 84]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 27, 39, 55, 84, 114] next_char=ID
使用产生式27:<赋值语句>->['ID', '=', '<表达式>', ';']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 35]
使用产生式26:<语句>->['<赋值语句>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39] next_char==
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55] next_char=ID
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 52] next_char=+
使用产生式56:FTYPE->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 52, 80]
使用产生式54:<因子>->['ID', 'FTYPE']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 51]
使用产生式51:<项>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 51, 77]
使用产生式48:<项>->['<因子>', "<项>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75] next_char=NUM
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75, 53] next_char=;
使用产生式52:<因子>->['NUM']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75, 51]
使用产生式51:<项>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75, 51, 77]
使用产生式48:<项>->['<因子>', "<项>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75, 50]
使用产生式47:<加法表达式>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75, 50, 74]
使用产生式44:<加法表达式>->['<项>', "<加法表达式>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED958714A0>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 75, 100]
使用产生式45:<加法表达式>'->['+', '<加法表达式>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 50, 74]
使用产生式44:<加法表达式>->['<项>', "<加法表达式>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 49]
使用产生式37:<表达式>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871510>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 49, 66]
使用产生式35:<表达式>->['<加法表达式>', "<表达式>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 84]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 39, 55, 84, 114] next_char=}
使用产生式27:<赋值语句>->['ID', '=', '<表达式>', ';']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 35]
使用产生式26:<语句>->['<赋值语句>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31]
使用产生式22:<语句串>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 31, 44]
使用产生式20:<语句串>->['<语句>', "<语句串>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871510>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 43]
使用产生式21:<语句串>'->['<语句串>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871510>   status=[0, 3, 7, 13, 15, 20, 25, 27, 31, 44]
使用产生式20:<语句串>->['<语句>', "<语句串>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 25, 27, 30]
移进  stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>  status=[0, 3, 7, 13, 15, 20, 25, 27, 30, 42] next_char=#
使用产生式16:<语句块>->['{', '<内部声明>', '<语句串>', '}']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 13, 15, 20, 24]
使用产生式9:<函数声明>->['(', '<形参>', ')', '<语句块>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 10]
使用产生式7:<声明类型>->['<函数声明>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 3, 7, 9]
使用产生式4:<声明>->['int', 'ID', '<声明类型>']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871510>   status=[0, 1]
使用产生式3:<声明串>'->['_']规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871430>   status=[0, 1, 5]
使用产生式1:<声明串>->['<声明>', "<声明串>'"]规约 stack=<generator object scan.<locals>.<genexpr> at 0x000001ED95871510>   status=[0, 2]
分析成功！
